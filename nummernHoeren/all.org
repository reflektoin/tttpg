#+title: All

* Description
User will hear a number by clicking the button "Wiederholen".
They can then click one of the options below. Clicking a button will repeat the sound.
After their selection they can press "Überprüfen" to check whether they selected the correct option.

If the choice was correct the Überprüfen button will change color to green and it's text will change to "Richtig!". If the answer was wrong, the button will turn red and text "Versuch nochmal" will appear.

By loading the page again another number will be quizzed.


* IDEAS
** DONE Stylize buttons "Wiederholen" and "Überprüfen" to diffently from answer options
:PROPERTIES:
:CUSTOM_ID: Stylize-wiederholen-überprüfen-buttons
:END:
** Reduce number of answer options
** Generate random answer options
** Add option quiz specific set of numbers
** Add option to quiz specific range of numbers
** Split js_file code block into separate blocks
Split related rows into their own blocks. Aim is to make it easier to refer to them and comment on them.
** Change vocabulary used to match Multiple choice terminology
Currently source code contains haphazardly used vocabulary/terminology. Maybe aim could be to talk about concepts using words in Wikipedia's [[https://en.wikipedia.org/wiki/Multiple_choice][multiple choice article]].


* Building the page

** Sound files
The sound files are downloaded from the [[https://de.wiktionary.org/wiki/zwei][German wiktionary]]. The first four numbers (zero to three) I've downloaded manually, but if I'm going to add tens of hundreds of numbers I'd like to do it programmatically.


** HTML file
First we'll create an index.html file.

#+name: html_file
#+begin_src html :tangle index.html :comments link :noweb yes
<!DOCTYPE html>
<html lang="en">
#+end_src

#+name: head_element
#+begin_src html :tangle index.html :comments link

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <title>Nummern hören</title>
</head>
#+end_src

#+name: begin_body
#+begin_src html :tangle index.html :comments link

<body>
#+end_src

#+name: repeatBtn
#+begin_src html :tangle index.html :comments link
    <div id="repeat">
        <button id="repeatBtn" class="btn repeatBtn">Wiederholen</button>
    </div>
#+end_src

All possible answer options will be appended to the element below.
#+name: answer_options
#+begin_src html :tangle index.html :comments link
    <div id="buttons">

    </div>
#+end_src

Button for checking the answer will be added to this in script.js file.
#+name: check_answer
#+begin_src html :tangle index.html :comments link
    <div id="check">
    </div>
#+end_src


#+name: footer_element
#+begin_src html :tangle index.html :comments link
    <footer>License (CC BY-SA 3.0) for sounds: <a
            href="https://creativecommons.org/licenses/by-sa/3.0/deed.en">here</a><br>
        Source for sounds: <a href="https://de.wiktionary.org/wiki/Datei:De-eins.ogg">here</a>
    </footer>
#+end_src

Refer to the script.js file using [[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script][script element]].
#+name: script_element
#+begin_src html :tangle index.html :comments link
    <script src="script.js"></script>
#+end_src

#+name: end_body
#+begin_src html :tangle index.html :comments link
</body>
#+end_src

#+name: end_html
#+begin_src html :tangle index.html :comments link

</html>
#+end_src

Next we'll create a css file called style.css


** CSS file
#+name: css_file
#+begin_src css :tangle style.css :comments link
@import url('https://fonts.googleapis.com/css?family=Ubuntu');

,* {
    box-sizing: border-box;
}

body {
    background-color: rgb(161,100,223);
    font-family: 'Ubuntu', sans-serif;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    text-align: center;
    margin: 0;
    overflow: hidden;
    height: 100vh;
}
footer {
    position: absolute;
    bottom: 10px;
}

.btn {
    background-color: rebeccapurple;
    border-radius: 5px;
    border: none;
    color: #fff;
    margin: 1rem;
    padding: 1.5rem 3rem;
    font-size: 1.2rem;
    font-family: inherit;
    cursor: pointer;
}

.btn.repeatBtn{
    background-color: #444444;
    font-size: 2rem;

}

.btn:hover {
    opacity: 0.9;
}


.btn:focus {
    outline: none;
}

.btn:active {

    scale: 0.95;

}
.btn.selected {
    opacity: 0.5;
}


#repeat {
    position: absolute;
    top: 2.5%;
}

.btn.check {
    background-color: #1739dd;
    margin: 50px;
}
.btn.check.wrong {
    background-color: red;
}
.btn.correct{
    background-color: green;
}
@media(max-width: 500px){
    .btn {
        font-size: 0.8rem;
    }
}
#+end_src


** JavaScript file
#+name: js_file
#+begin_src javascript :tangle script.js :comments link
const sounds = ['null', 'eins', 'zwei', 'drei', 'fünf',
                'sechs',
                'sieben',
                'acht',
                'neun',
                'zehn',
                'elf',
                'zwölf',
                'dreizehn',
'vierzehn',
'fünfzehn',
'sechzehn',
'siebzehn',
'achtzehn',
'neunzehn',
'zwanzig',
'einundzwanzig',
'zweiundzwanzig',
'dreiundzwanzig',
'vierundzwanzig',
'fünfundzwanzig',
'sechsundzwanzig',
'siebenundzwanzig',
'achtundzwanzig',
'neunundzwanzig',
'dreißig',
'einunddreißig',
'zweiunddreißig',
'dreiunddreißig',
'vierunddreißig',
'fünfunddreißig',
'sechsunddreißig',
'siebenunddreißig',
'achtunddreißig',
'neununddreißig',
'vierzig',
'einundvierzig',
'zweiundvierzig',
'dreiundvierzig',
'vierundvierzig',
'fünfundvierzig',
'sechsundvierzig',
'siebenundvierzig',
'achtundvierzig',
'neunundvierzig',
'fünfzig',
'einundfünfzig',
'zweiundfünfzig',
'dreiundfünfzig',
'vierundfünfzig',
'fünfundfünfzig'
        ];
addSounds()
function addSounds(){
  sounds.forEach((sound) => {
    const body = document.querySelector('body')
    const soundEl = document.createElement('audio')
    soundEl.id = sound
    soundEl.src = `sounds/De-${sound}.ogg`
    body.appendChild(soundEl)
  });
}

let guessedAnswer = ''
const correctNumber = getRandomNumberSound()
const repeatBtn = document.querySelector('.btn.repeatBtn')
console.log(repeatBtn)
repeatBtn.addEventListener('click', () => {
  document.getElementById(sounds[correctNumber]).play()
})
sounds.forEach(sound => {
  const btn = document.createElement('button')
  btn.classList.add('btn');
  btn.classList.add('options');

  btn.innerText = sound;

  btn.addEventListener('click', () => {
    resetCheckBtn()
    clearSelection()
    stopSongs();
    document.getElementById(sound).play()
    guessedAnswer = sound

    //add indicator for selected answer
    btn.classList.add('selected')
  })

  document.getElementById('buttons').
    appendChild(btn);
})

const checkEl = document.getElementById('check')
const checkBtn = document.createElement('button')

checkBtn.innerText = 'Überpfüfen'
checkBtn.classList.add('btn');
checkBtn.classList.add ('check')
checkBtn.addEventListener('click', () => {
  //remove correct and wrong classes in case user had already guessed
  checkBtn.classList.remove('correct')
  checkBtn.classList.remove('right')
  let correctAnswer = sounds[correctNumber]
  if (guessedAnswer === correctAnswer) {
    console.log('Correct answer')

    //add class "correct" in order to stylize it to show that the answer was correct
    checkBtn.classList.add('correct')
    checkBtn.innerText = 'Richtig!'
  } else {
    console.log('Wrong answer')
    checkBtn.classList.add('wrong')
    checkBtn.innerText = 'Versuch nochmal'
  }
})

checkEl.appendChild(checkBtn)

function stopSongs() {
  sounds.forEach(sound => {
    const song = document.getElementById(sound)
    song.pause();
    song.currentTime = 0;
  })
}

function getRandomNumberSound() {
  return Math.floor(Math.random() * sounds.length)
}

function clearSelection() {
  btns = document.querySelectorAll('.options')
  console.log('clear selection')
  btns.forEach((btn) => {
    btn.classList.remove('selected')
  })
}

function resetCheckBtn() {

  const checkBtn = document.querySelector('#check button')
  checkBtn.innerText = 'Überpfüfen'
  checkBtn.classList.remove('wrong')
}
#+end_src
